<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>